<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>